<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>